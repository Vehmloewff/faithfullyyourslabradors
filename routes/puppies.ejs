<script sync>
  const Litter = require('~/models/Litter')
  const Deposit = require('~/models/Deposit')
  const { initPanel, openPanel } = require('~/lib/panel')
  const { sendEmail } = require('~/lib/send-email.js')

  initPanel(on)

  const getLitters = async ($) => {
    $.litters = await Litter.find({ sellingDeposits: true })

    for (const litter of $.litters) {
      const deposits = await Deposit.find({ litterId: litter.id })
      litter.depositsLeftCount = litter.expectedCount - deposits.length
    }
  }

  on.mount = async (ctx, $) => {
    $.title = 'Puppies'
    if (ctx.session.user) $.admin = true

    await getLitters($)

    return ctx.render($)
  }

  on.startMakeDeposit = async (ctx, $) => {
    const litterId = ctx.payload

    openPanel(ctx, $, {
      title: 'Make a Deposit',
      submitAction: 'makeDeposit',
      easyClose: true,
      fields: [
        {
          type: 'hidden',
          value: litterId,
          name: 'litterId',
        },
        {
          type: 'text',
          name: 'name',
          label: 'Name',
        },
        {
          type: 'email',
          name: 'email',
          label: 'Email',
        },
        {
          type: 'textarea',
          name: 'note',
          label: 'Note',
        }
      ],
      buttons: [
        {
          type: 'button',
          coloring: 'secondary',
          label: 'Cancel'
        },
        {
          type: 'submit',
          label: 'Submit'
        }
      ]
    })

    return ctx.render($)
  }

  on.makeDeposit = async (ctx, $) => {
    const litter = $.litters.find(litter => litter.id == ctx.payload.litterId)
    await Deposit.create(ctx.payload)

    await sendEmail({
      name: 'Boss',
      email: process.env.FROM_EMAIL,
      subject: 'New Deposit Request',
      content: `Hey Boss!\n\n${ctx.payload.name} wants to make a deposit on "${litter.title}".\n\nHe left a note saying:\n\n--\n\n${ctx.payload.note}\n\n--\n\nHis email is ${ctx.payload.email}\n\n`
    })

    await sendEmail({
      name: ctx.payload.name,
      email: ctx.payload.email,
      subject: 'We have received your deposit request',
      content: `Hey ${ctx.payload.name}!\n\nThis is an automated email to let you know that we have received your deposit request for "${litter.title}".\n\nYou can expect an email from us shortly. If you have any questions, simply reply to this email or call us at (918) 724-2125.\n\nThanks,\nFaithfully Yours Labradors`
    })

    return ctx.flash('success', 'We have received your deposit request and will be in touch shortly!').redirect('/puppies')
  }
</script>

<section class="container">
  <h1>Puppies</h1>

  <% if (!$.litters.length) { %>

  <p>Sadly, there are no puppies available at this time.</p>
  <p>You can learn about future availability by <a href="/contact">contacting us</a>.</p>

  <% } else { %>
  <div class="flex flex-col gap-4" id="litters">
    <%for (let litter of $.litters) { %>

    <div class="flex flex-col md:flex-row rounded overflow-hidden bg-light-3 gap-4">
      <img
        class="h-40 w-full md:h-[unset] md:w-40 rounded-none object-cover object-center"
        src="<%= litter.imageUrl %>"
        alt="Puppies Photo"
      />

      <div class="flex flex-col gap-4 py-4 px-4 md:px-0">
        <div class="text-lg font-bold"><%= litter.title %></div>

        <div class="flex gap-4 flex-col md:flex-row md:items-center">
          <button <%= !litter.depositsLeftCount ? "disabled" : '' %> s-click="startMakeDeposit" s-payload="<%= litter.id %>">Make A Deposit</button>

          <div class="text-sm text-dark-4"><%= litter.depositsLeftCount %> deposits available</div>
        </div>
      </div>
    </div>

    <% } %>
  </div>
  <% } %>
</section>


<section class="container text-center">
  <div class="h-12"></div>

  <h3>Can't find your perfect puppy?</h3>
  <a href="/contact">Talk to us</a>

  <div class="h-12"></div>
</section>

