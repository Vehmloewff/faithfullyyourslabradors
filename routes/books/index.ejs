<script sync>
  const Book = require('~/models/Book')
  const validate = require('~/lib/validate')

  function openPanel(ctx) {
    ctx.removeClass('#panel', '.-right-1/2').addClass('#panel', '.right-0')
  }

  function closePanel(ctx) {
    ctx.removeClass('#panel', '.right-0').addClass('#panel', '.-right-1/2')
  }

  on.mount = async (ctx, $) => {
    $._formErrors = {}
    $.title = 'Books'
    $.books = await Book.listAll()
    ctx.render($)
    return $
  }

  on.newBook = async (ctx, $) => {
    openPanel(ctx)
    $.book = {}
    ctx.render($, '#panel')
    return $
  }

  on.createBook = async (ctx, $) => {
    closePanel(ctx)
    await Book.create(ctx.payload)
    $.books = await Book.listAll()
    return ctx.render($, ['#booklist', '#panel'])
  }

  on.editBook = async (ctx, $) => {
    openPanel(ctx)
    $.book = await Book.findByIdAndUpdate(ctx.payload)
    return ctx.render($, '#panel')
  }

  on.updateBook = async (ctx, $) => {
    closePanel(ctx)
    await Book.findByIdAndUpdate(ctx.payload.id, ctx.payload)
    $.books = await Book.listAll()
    return ctx.render($, ['#booklist', '#panel'])
  }

  on.deleteBook = async (ctx, $) => {
    closePanel(ctx)
    await Book.deleteOne({ _id: ctx.payload })
    $.books = await Book.listAll()
    return ctx.render($, ['#booklist', '#panel'])
  }

  on.validate = (ctx, $) => {
    return validate(ctx, $, Book)
  }
</script>

<!-- Table of books -->
<div class="page">
  <div class="flex justify-between items-center">
    <h1>Books</h1>
    <button s-click="newBook">New</button>
  </div>
  <table id="booklist">
    <tr>
      <th>Title</th>
      <th>Author</th>
    </tr>

    <% for (let book of $.books) { %>
    <tr class="hover:cursor-pointer" s-click="editBook" s-payload="<%= book.id %>">
      <td><%= book.title %></td>
      <td><%= book.author %></td>
    </tr>
    <% } %>
  </table>
</div>
